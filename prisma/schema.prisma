generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id             String     @id @default(uuid()) @db.VarChar(36)
  category_id    String?    @db.VarChar(36)
  name           String     @db.VarChar(255)
  keywords       String?    @db.VarChar(255)
  description    String?    @db.Text
  position       Int        @default(0)
  created_at     DateTime   @default(now()) @db.DateTime(6)
  updated_at     DateTime   @updatedAt() @db.DateTime(6)
  deleted_at     DateTime?  @db.DateTime(6)
  category       Category?  @relation("categoryTocategory", fields: [category_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "FK_cc7f32b7ab33c70b9e715afae84")
  other_category Category[] @relation("categoryTocategory")

  @@index([category_id], map: "FK_cc7f32b7ab33c70b9e715afae84")
  @@map("categories")
}

model Customers {
  id         String     @id @default(uuid()) @db.VarChar(36)
  name       String     @db.VarChar(105)
  email      String     @db.VarChar(85)
  password   String     @db.VarChar(86)
  cpf        String?    @db.VarChar(20)
  cnpj       String?    @db.VarChar(22)
  phone      String?    @db.VarChar(20)
  avatar     String?    @db.VarChar(41)
  created_at DateTime   @default(now()) @db.DateTime(6)
  updated_at DateTime   @updatedAt() @db.DateTime(6)
  deleted_at DateTime?  @db.DateTime(6)
  birth_date String?    @db.VarChar(20)
  adresses   Adresses[]
  Sales      Sales[]

  @@map("customers")
}

model Adresses {
  id          String          @id @default(uuid()) @db.VarChar(36)
  customes_id String          @db.VarChar(36)
  recipient   String          @db.VarChar(55)
  address     String          @db.VarChar(65)
  number      String          @db.VarChar(5)
  district    String          @db.VarChar(45)
  complement  String?         @db.VarChar(85)
  reference   String?         @db.VarChar(85)
  city        String          @db.VarChar(45)
  state       String          @db.VarChar(2)
  zip_code    String          @db.VarChar(9)
  status      adresses_status @default(yes)

  created_at DateTime  @default(now()) @db.DateTime(6)
  updated_at DateTime  @updatedAt() @db.DateTime(6)
  deleted_at DateTime? @db.DateTime(6)

  customer Customers @relation(fields: [customes_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "FK_CUSTOMERS")

  @@index([customes_id], map: "FK_CUSTOMERS")
  @@map("adresses")
}

model Products {
  id               String           @id @default(uuid()) @db.VarChar(36)
  name             String           @db.VarChar(155)
  created_at       DateTime         @default(now()) @db.DateTime(6)
  updated_at       DateTime         @updatedAt() @db.DateTime(6)
  deleted_at       DateTime?        @db.DateTime(6)
  keywords         String           @db.VarChar(255)
  visible          products_visible @default(invisible)
  description_text String?          @db.Text
  description      String           @db.VarChar(505)
  skus             ProductsSkus[]

  @@map("products")
}

model ProductsImages {
  id             String        @id @default(uuid()) @db.VarChar(36)
  product_sku_id String?       @db.VarChar(36)
  image          String        @db.VarChar(42)
  position       Int           @default(0)
  created_at     DateTime      @default(now()) @db.DateTime(6)
  updated_at     DateTime      @updatedAt() @db.DateTime(6)
  deleted_at     DateTime?     @db.DateTime(6)
  skus           ProductsSkus? @relation(fields: [product_sku_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "FK_d8ddccdc9bbd7345d257f6cb9fc")

  @@index([product_sku_id], map: "FK_d8ddccdc9bbd7345d257f6cb9fc")
  @@map("products_images")
}

model ProductsSkus {
  id         String           @id @default(uuid()) @db.VarChar(36)
  sku        String           @db.VarChar(20)
  price      Decimal          @default(0) @db.Decimal(10, 0)
  quantity   Int              @default(0)
  created_at DateTime         @default(now()) @db.DateTime(6)
  updated_at DateTime         @updatedAt() @db.DateTime(6)
  deleted_at DateTime?        @db.DateTime(6)
  cost_price Decimal          @default(0) @db.Decimal(10, 0)
  sale_price Decimal          @default(0) @db.Decimal(10, 0)
  product_id String           @db.VarChar(36)
  images     ProductsImages[]
  product    Products         @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "FK_4a232ada01f43f6119ed6636985")
  sales      SalesProducts[]

  @@index([product_id], map: "FK_4a232ada01f43f6119ed6636985")
  @@map("products_skus")
}

model Sales {
  id           String    @id @default(uuid()) @db.VarChar(36)
  code         String    @db.VarChar(20)
  date_of_sale DateTime  @db.DateTime(6)
  customers_id String    @db.VarChar(36)
  created_at   DateTime  @default(now()) @db.DateTime(6)
  updated_at   DateTime  @updatedAt() @db.DateTime(6)
  deleted_at   DateTime? @db.DateTime(6)

  transactions SalesTransactions[]
  addresses    SalesAddresses[]
  products     SalesProducts[]
  customer     Customers           @relation(fields: [customers_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "FK_CUSTOMER")

  @@index([customers_id], map: "FK_CUSTOMER")
  @@index([code, date_of_sale])
  @@map("sales")
}

model SalesAddresses {
  id String @id @default(uuid()) @db.VarChar(36)

  sales_id   String  @db.VarChar(36)
  recipient  String  @db.VarChar(55)
  address    String  @db.VarChar(65)
  number     String  @db.VarChar(5)
  district   String  @db.VarChar(45)
  complement String? @db.VarChar(85)
  reference  String? @db.VarChar(85)
  city       String  @db.VarChar(45)
  state      String  @db.VarChar(2)
  zip_code   String  @db.VarChar(9)

  sale Sales @relation(fields: [sales_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "FK_SALE_ADDRESS")

  @@index([sales_id], map: "FK_SALE_ADDRESS")
  @@map("sales_addresses")
}

model SalesProducts {
  id                String  @id @default(uuid()) @db.VarChar(36)
  sales_id          String  @db.VarChar(36)
  produtcts_skus_id String  @db.VarChar(36)
  quantity          Int     @default(0) @db.Int()
  price_paid        Decimal @default(0) @db.Decimal(10, 0)

  sale Sales        @relation(fields: [sales_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "FK_SALE_PRODUCTS")
  sku  ProductsSkus @relation(fields: [produtcts_skus_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "FK_SKU_PRODUCTS")

  @@index([sales_id], map: "FK_SALE_PRODUCTS")
  @@index([produtcts_skus_id], map: "FK_SKU_PRODUCTS")
  @@map("sales_products")
}

model SalesTransactions {
  id              String                           @id @default(uuid()) @db.VarChar(36)
  sales_id        String                           @db.VarChar(36)
  payment_methods String                           @db.VarChar(55)
  flag            String                           @db.VarChar(20)
  installment     Int                              @default(0) @db.TinyInt
  discounts       Decimal                          @default(0) @db.Decimal(10, 0)
  total_price     Decimal                          @default(0) @db.Decimal(10, 0)
  price_increase  Decimal                          @default(0) @db.Decimal(10, 0)
  created_at      DateTime                         @default(now()) @db.DateTime(6)
  updated_at      DateTime                         @updatedAt() @db.DateTime(6)
  deleted_at      DateTime?                        @db.DateTime(6)
  discount_type   sales_transactions_discount_type @default(percent)
  sale            Sales                            @relation(fields: [sales_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "FK_SALE_TRANSATIONS")

  @@index([sales_id], map: "FK_SALE_TRANSATIONS")
  @@map("sales_transactions")
}

model Stores {
  id            String    @id @default(uuid()) @db.VarChar(36)
  title         String    @db.VarChar(105)
  fantasy_name  String    @db.VarChar(105)
  email         String    @db.VarChar(55)
  phone         String    @db.VarChar(20)
  opening_hours String?   @db.VarChar(155)
  address       String    @db.VarChar(55)
  number        String    @db.VarChar(4)
  district      String    @db.VarChar(35)
  complement    String?   @db.VarChar(45)
  city          String    @db.VarChar(35)
  state         String    @db.VarChar(2)
  zip_code      String    @db.VarChar(9)
  visible       Int       @default(1) @db.TinyInt
  created_at    DateTime  @default(now()) @db.DateTime(6)
  updated_at    DateTime  @updatedAt() @db.DateTime(6)
  deleted_at    DateTime? @db.DateTime(6)

  @@map("stores")
}

enum products_visible {
  visible
  invisible
}

enum sales_transactions_discount_type {
  price
  percent
}

enum adresses_status {
  yes
  no
}
